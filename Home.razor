@page "/"
@using CourtSystem.Components
@using CourtSystem.Components.Pages
@using CourtSystem.Models
@using CourtSystem.Data

@inject IJSRuntime JSRuntime

<div class="h-full grid grid-cols-[0.1fr_1fr] grid-rows-[auto_1fr] py-2">
    <div class="row-span-2 flex flex-col px-2 mx-2 border-r border-r-3 border-r-slate-500 overflow-y-auto">
        @foreach (var defendant in CourtList.Defendants) {
            <div class="text-sm lg:text-lg p-1 max-h-[6rem] overflow-hidden border border-slate-500 bg-slate-200 cursor-pointer @IsSelected(defendant)" @onclick="() => ActivateDefendant(defendant)">
                @defendant.FirstName @defendant.LastName
            </div>
        }
    </div>
    @if (ActiveDefendant is null) {
        <div class="pb-2">
        </div>
    }
    else {
        <div class="pb-2 pr-4 w-full flex justify-between">
            <RadzenSelectBar Style="font-weight: 400" Data="@ActiveDefendant!.CaseFiles" @bind-Value="@ActiveDefendant!.ActiveCaseFile" TValue="CaseFile" TextProperty="CaseFileNumber" ValueProperty="ActiveCaseFile" />
            <RadzenButton Text="Save" Click="SaveCourtList" />
        </div>
    }
    <div class="h-full">
        <CascadingValue Value="this">
            <TabControl>
                <TabPage Title="CFEL">
                    <CfelPage />
                </TabPage>
                <TabPage Title="Information">
                    <InformationPage />
                </TabPage>
                <TabPage Title="Facts of Charge">
                    <FactsOfChargePage />
                </TabPage>
                <TabPage Title="Correspondence">
                    <CorrespondencePage />
                </TabPage>
                <TabPage Title="Evidence">
                    <EvidencePage />
                </TabPage>
                <TabPage Title="Follow-Ups">
                    <FollowUpsPage />
                </TabPage>
                <TabPage Title="Notes">
                    <NotesPage />
                </TabPage>
            </TabControl>
        </CascadingValue>
    </div>

    @if (_error is not null) {
        <p>@_error</p>
    }
</div>

@code {
    private CourtList CourtList { get; set; } = default!;
    public Defendant? ActiveDefendant { get; set; }
    private string? _error { get; set; }

    protected override void OnInitialized() {

        var output = CourtListParser.ReadCaseFiles("SeedData.json");
        if (output is not null) {
            CourtList = output;
            CourtList.GenerateInformations();
            ActiveDefendant = CourtList.Defendants.FirstOrDefault();
            if (ActiveDefendant is not null) {
                ActiveDefendant.ActiveCaseFile = ActiveDefendant?.CaseFiles.FirstOrDefault();
            }
        }
        else {
            _error = "Error reading file";
        }

    }

    private void ActivateDefendant(Defendant defendant) {
        ActiveDefendant = defendant;
        if (ActiveDefendant.ActiveCaseFile is null) {
            ActiveDefendant.ActiveCaseFile = ActiveDefendant.CaseFiles.First();
        }
    }

    private string IsSelected(Defendant defendant) {
        if (ActiveDefendant?.Id == defendant.Id) {
            return "!bg-sky-700";
        }

        return "hover:bg-gray-500";
    }

    private void SaveCourtList() {
        Console.WriteLine("Saving CourtList");
    }
}
