// <auto-generated />
using System;
using CourtSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourtSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240326091405_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("CourtSystem.Models.CaseFile", b =>
                {
                    b.Property<string>("CaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourtFileNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("DefendantId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FactsOfCharge")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InformationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CaseFileNumber");

                    b.HasIndex("DefendantId");

                    b.HasIndex("InformationId");

                    b.ToTable("CaseFile");
                });

            modelBuilder.Entity("CourtSystem.Models.CaseFileDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileNumber");

                    b.ToTable("CaseFileDocument");
                });

            modelBuilder.Entity("CourtSystem.Models.CaseFileEnquiryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnteredBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntryText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileNumber");

                    b.ToTable("CaseFileEnquiryLog");
                });

            modelBuilder.Entity("CourtSystem.Models.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeWording")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VictimName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileNumber");

                    b.ToTable("Charge");
                });

            modelBuilder.Entity("CourtSystem.Models.CourtList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CourtLists");
                });

            modelBuilder.Entity("CourtSystem.Models.Defendant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActiveCaseFileCaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CourtListId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ListNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActiveCaseFileCaseFileNumber");

                    b.HasIndex("CourtListId");

                    b.ToTable("Defendant");
                });

            modelBuilder.Entity("CourtSystem.Models.HearingEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppearanceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HearingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileNumber");

                    b.ToTable("HearingEntry");
                });

            modelBuilder.Entity("CourtSystem.Models.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Information");
                });

            modelBuilder.Entity("CourtSystem.Models.OccurrenceDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileNumber");

                    b.ToTable("OccurrenceDocument");
                });

            modelBuilder.Entity("CourtSystem.Models.CaseFile", b =>
                {
                    b.HasOne("CourtSystem.Models.Defendant", null)
                        .WithMany("CaseFiles")
                        .HasForeignKey("DefendantId");

                    b.HasOne("CourtSystem.Models.Information", "Information")
                        .WithMany()
                        .HasForeignKey("InformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Information");
                });

            modelBuilder.Entity("CourtSystem.Models.CaseFileDocument", b =>
                {
                    b.HasOne("CourtSystem.Models.CaseFile", null)
                        .WithMany("CaseFileDocuments")
                        .HasForeignKey("CaseFileNumber");
                });

            modelBuilder.Entity("CourtSystem.Models.CaseFileEnquiryLog", b =>
                {
                    b.HasOne("CourtSystem.Models.CaseFile", null)
                        .WithMany("CfelEntries")
                        .HasForeignKey("CaseFileNumber");
                });

            modelBuilder.Entity("CourtSystem.Models.Charge", b =>
                {
                    b.HasOne("CourtSystem.Models.CaseFile", null)
                        .WithMany("Charges")
                        .HasForeignKey("CaseFileNumber");
                });

            modelBuilder.Entity("CourtSystem.Models.Defendant", b =>
                {
                    b.HasOne("CourtSystem.Models.CaseFile", "ActiveCaseFile")
                        .WithMany()
                        .HasForeignKey("ActiveCaseFileCaseFileNumber");

                    b.HasOne("CourtSystem.Models.CourtList", null)
                        .WithMany("Defendants")
                        .HasForeignKey("CourtListId");

                    b.Navigation("ActiveCaseFile");
                });

            modelBuilder.Entity("CourtSystem.Models.HearingEntry", b =>
                {
                    b.HasOne("CourtSystem.Models.CaseFile", null)
                        .WithMany("PreviousHearings")
                        .HasForeignKey("CaseFileNumber");
                });

            modelBuilder.Entity("CourtSystem.Models.Information", b =>
                {
                    b.OwnsMany("CourtSystem.Models.InformationEntry", "Charges", b1 =>
                        {
                            b1.Property<int>("InformationId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Sequence")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("InformationId", "Id");

                            b1.ToTable("InformationEntry");

                            b1.WithOwner()
                                .HasForeignKey("InformationId");
                        });

                    b.Navigation("Charges");
                });

            modelBuilder.Entity("CourtSystem.Models.OccurrenceDocument", b =>
                {
                    b.HasOne("CourtSystem.Models.CaseFile", null)
                        .WithMany("OccurrenceDocuments")
                        .HasForeignKey("CaseFileNumber");
                });

            modelBuilder.Entity("CourtSystem.Models.CaseFile", b =>
                {
                    b.Navigation("CaseFileDocuments");

                    b.Navigation("CfelEntries");

                    b.Navigation("Charges");

                    b.Navigation("OccurrenceDocuments");

                    b.Navigation("PreviousHearings");
                });

            modelBuilder.Entity("CourtSystem.Models.CourtList", b =>
                {
                    b.Navigation("Defendants");
                });

            modelBuilder.Entity("CourtSystem.Models.Defendant", b =>
                {
                    b.Navigation("CaseFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
